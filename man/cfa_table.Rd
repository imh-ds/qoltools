% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/confirmatory_factor_analysis_table.R
\name{cfa_table}
\alias{cfa_table}
\title{MULTIPLE CONFIRMATORY FACTOR ANALYSIS WRAPPER}
\usage{
cfa_table(
  data = .,
  models,
  cluster = NULL,
  missing = "listwise",
  se = NULL,
  estimator = "ML"
)
}
\arguments{
\item{data}{A dataframe object. This should be a structured dataset where
each column represents a variable and each row represents an observation.}

\item{cluster}{If working with clustered/multilevel/hierarchical data, define
the cluster or group variable to account for shared SE. Cluster should be
a categorical factor variable.}

\item{missing}{Parameter to determine how to handle missingness. Default
is set to "listwise" where all observations with missing values are deleted
prior to analysis. As detailed in \code{lavaan}'s documentation, this is only
recommended when data are missing completely at random (MCAR). Another
options is "ml" for full information maximum likelihood approach (fiml).
Refer to lavaan documentation for additional details.}

\item{se}{Parameter to determine how to compute standard errors. Default
is set to NULL. Set to "robust" to use either "robust.sem" or
"robust.huber.white" depending on the estimator used. Refer to lavaan
documentation for additional details.}

\item{estimator}{Estimator to be used in the confirmatory factor analysis.
Default is maximum likelihood (ML). Alternative esimators are limited to
those offered by \code{lavaan}, e.g., "GLS", "WLS", "DWLS", "ULS", "DLS", and
"PML". Refer to \code{lavaan} documentation for additional details.}

\item{model}{A list of named \code{lavaan} defined SEM objects. Refer to \code{lavaan}
documentation for a description of the user-specified model.}
}
\description{
A simple wrapper to automate the running of multiple CFAs to compare fits.
}
\examples{
# Note: Model example courtesy of 'lavaan'

model1 <- '
  # measurement model
    ind60 =~ x1 + x2 + x3
    dem60 =~ y1 + y2 + y3 + y4
    dem65 =~ y5 + y6 + y7 + y8
 '
 
model2 <- '
  # measurement model
    ind60 =~ x1 + x2
    dem60 =~ y1 + y2
    dem65 =~ y5 + y6
 '

model_list <- list(First_Model = model1,
                   Second_Model = model2)

cfa_table(data = data,
          models = model_list)


}
\references{
Yves Rosseel (2012). lavaan: An R Package for Structural Equation
Modeling. \emph{Journal of Statistical Software}, 48(2), 1-36.
https://doi.org/10.18637/jss.v048.i02
}
